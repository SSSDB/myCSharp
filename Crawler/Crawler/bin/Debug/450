<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="在以前的博文中，时常有分享Fiddler的一些使用技巧，今天再贴下。 Fiddler抓包工具使用详解 利用Fiddler拦截接口请求并篡改数据 Fiddler使用过程中容易忽略的小技巧 Mock测试，" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>不可不知的辅助测试的Fiddler小技巧 - 温一壶清酒 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/cogitation/bundle-cogitation.min.css?v=PJ48NAY_dmbjZZ0ZTev3Avl3BcTMJe39d3Pc83CPcig" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/hong-fithing/custom.css?v=6UcKF7Wj0HHhgPVHu&#x2B;PVhK8iVqk=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/cogitation/bundle-cogitation-mobile.min.css?v=jLHKTG0H_smj72y-Z2j0JGYUmhBVGTu4_QpAGb1B_sA" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/hong-fithing/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/hong-fithing/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/hong-fithing/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 382990;
        var currentBlogApp = 'hong-fithing';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'Cogitation';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    <div id="top">
	
<div>
	<table>
		<tr>
			<td class="HeaderTitles">
				<h1 class="HeaderTitle"><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/hong-fithing/">温一壶清酒</a>
</h1>
				<p id="tagline">

</p>
			</td>
		</tr>
	</table>
</div>
<div class="HeaderBar">
	<table id="HeaderBar" class="HeaderBar" cellpadding="0" cellspacing="0">
		<tr>
			<td class="HeaderBarTab" nowrap>
&nbsp;
<a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
 ::

<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/hong-fithing/">
首页</a>
 ::
<a href="http://q.cnblogs.com" class="menu">博问</a> ::
<a href="http://home.cnblogs.com/ing/" class="menu">闪存</a> ::


<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
 ::

<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%B8%A9%E4%B8%80%E5%A3%B6%E6%B8%85%E9%85%92">
联系</a> ::

<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/hong-fithing/rss/">
订阅</a>

<a id="blog_nav_rss_image" href="https://www.cnblogs.com/hong-fithing/rss/">
    <img src="/skins/cogitation/images/xml.gif" alt="订阅" />
</a> ::

<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
 ::


</td>
			<td><img id="Header1_BlueTab" src="/skins/cogitation/images/BlueTabRight.gif" align="absmiddle" alt=""/></td>
			<td class="HeaderBarTabBack" nowrap width="100%">
				<div class="BlogStatsBar">
	<table class="BlogStatsBar">
		<tr>
			<td width="100%">
			</td>
			<td class="BlogStatsBar" nowrap>
				&nbsp;
				
71 
				随笔&nbsp;::
				
0 文章
				::
				
65 评论
				::
				
0 引用
			</td>
		</tr>
	</table>
</div>


			</td>
		</tr>
	</table>
</div>


</div>
<div id="leftmenu">	

	    <div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
		
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
		<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
	
</div>
<div id="main">
	<div id="post_detail">
<div class="post">
	<div class="postTitle">
		
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/hong-fithing/p/12992911.html">不可不知的辅助测试的Fiddler小技巧</a>

	</div>
	
	<div class="postText">
		
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>在以前的博文中，时常有分享Fiddler的一些使用技巧，今天再贴下。</p>
<p><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/hong-fithing/p/7582947.html">Fiddler抓包工具使用详解</a></p>
<p><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/hong-fithing/p/10727178.html">利用Fiddler拦截接口请求并篡改数据</a></p>
<p><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/hong-fithing/p/10889227.html">Fiddler使用过程中容易忽略的小技巧</a></p>
<p><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/hong-fithing/p/12582455.html">Mock测试，结合Fiddler轻松搞定不同场景</a></p>
<p>以上这些，就是以前的一些实践总结。今天，再来分享一个不可不知的小技巧，实际工作当中，是可以辅助自己完成测试的。</p>
<h2>模拟弱网</h2>
<p>相信大家在进行测试过程中，都会关注到弱网测试。web端是可以通过浏览器的开发者工具中的Network设置网络数据，app端也可以通过切换网络的形式来进行测试。</p>
<p>其实，Fiddler也是支持模拟弱网测试的。通过Fiddler设置后，web和app都可以一并模式。</p>
<h3>固定延迟设置方式</h3>
<p>启动Fiddler工具&gt;找到FiddlerScript页签&gt;按m_SimulateModem搜索。</p>
<p>找到如下所示内容【限速函数】，修改参数即可：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530135756007-1325588675.png" alt=""></p>
<p>修改代码中的参数，将300修改为3000，也就是3S，如下：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">if (m_SimulateModem) {
            // Delay sends by 300ms per KB uploaded.
            oSession["request-trickle-delay"] = "3000"; 
            // Delay receives by 150ms per KB downloaded.
            oSession["response-trickle-delay"] = "150"; 
        }　　</pre>
</div>
<p>此时，保存修改后的Script代码即可，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530140047755-1105081249.png" alt=""></p>
<p>数据保存后，如何使其生效呢？按如下操作即可。</p>
<p>在Fiddler中，按如下路径配置即可：Rules&gt;Performance&gt;Simulate Modem Speeds。</p>
<p>具体操作，如下图所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530140424043-1128161671.png" alt=""></p>
<p>此时，再刷新页面，我们可以从Fiddler面板中的Time参数看出，每个接口的响应时间都延时3s，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530140514345-1426166513.png" alt=""></p>
<p>网络延迟时间如何计算？</p>
<p>比如你要模拟上传速度100KBps的网络，那上传延迟就是1KB/100KBps=0.01s=10ms，就改成10。</p>
<h3>随机延迟设置方式</h3>
<p>我们从上述操作看出，配置限速参数后，每个接口都是固定的延迟时间。但实际使用场景中，这种情况是比较少的。基本上都是有时快，有时慢的情况。那是否可以设置随机延迟呢？答案肯定是可以的。我们继续来看。</p>
<p>我们依然在FiddlerScript页签中操作，加入如下代码，代码如下所示：</p>
<div class="cnblogs_Highlighter">
<pre class="brush:javascript;gutter:true;">static function randInt(min, max) {
　　return Math.round(Math.random()*(max-min)+min);
　　}
　　if (m_SimulateModem) {
　　// Delay sends by 300ms per KB uploaded.
　　oSession["request-trickle-delay"] = ""+randInt(1,2000);
　　// Delay receives by 150ms per KB downloaded.
　　oSession["response-trickle-delay"] = ""+randInt(1,2000);
　　}　　</pre>
</div>
<p>保存修改后的代码，并重新启用配置即可。</p>
<h2>模拟发包</h2>
<p>测试过程中，想模拟一个接口请求，一般是通过Postman、Jmeter、soupUI，常用的是Postman。我们Fiddler能不能模拟接口请求呢？这个是可以的，我们来看。</p>
<p>我们切换到Composer页签，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530143433981-1575626239.png" alt=""></p>
<p>从图中可知，是可以模拟很多种请求方式的。我们就来实际操作一番。</p>
<h3>POST请求</h3>
<p>我们先来操作个POST请求，选择POST请求方式，填写接口与参数如下：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530143808998-174042991.png" alt=""></p>
<p>接口与参数填写正确后，点击右上角的Execute按钮即可请求接口。我们来看下请求数据：</p>
<p>我们先来看请求头，接口请求头中的User-Agent参数，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530144127492-2010645130.png" alt=""></p>
<p>用户代理来源是Fiddler，就是刚才我们通过Fiddler工具请求的数据。</p>
<p>我们再来看响应，接口请求成功，正常响应并获取到token数据，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530144401850-1501516079.png" alt=""></p>
<h3>GET请求</h3>
<p>刚才操作的是POST请求，现在来看个GET请求。操作方式都一样，将请求方式切换成GET，填写接口与参数，并点击Execute按钮，配置如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530144611609-381010279.png" alt=""></p>
<p>我们依然来看接口数据，先看请求头参数：</p>
<p>&nbsp;<img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530150915093-1108238644.png" alt=""></p>
<p>User-Agent参数依然是Fiddler，说明是从Fiddler工具中发出的请求。</p>
<p>再来看响应数据，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530151013371-687593120.png" alt=""></p>
<p>以上就是通过Fiddler模拟请求POST和GET请求了，其他方式类似。</p>
<h2>模拟并发</h2>
<p>在我们测试中，也会关注到，一个接口同时请求多次，会不会产生错误，比如：重复数据。那这次就需要考虑并发情况了。</p>
<p>Fiddler工具依然还是支持该操作，具体如下：</p>
<p>我们先选中已抓取的任一接口，点击右键，并选择Replay&gt;Reissue Sequentially，也可以快捷键【Shift + R】如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530152336522-1587991137.png" alt=""></p>
<p>点击后，会弹出如下弹框，设置请求次数，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530151719316-1088754200.png" alt=""></p>
<p>默认是5，那我们改成3，并点击OK按钮，来看界面，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530152445972-6147691.png" alt=""></p>
<p>我们可以看到，同时请求了3次，简单模拟了并发测试，但实际是不及Jmeter工具的，毕竟这个也只是模拟，而Jmeter要专业许多。</p>
<p>了解完了并发使用，但还有些其他参数没有介绍，我们来了解下其他参数，说不准以后也有用途。如下所示：</p>
<ul>
<li>Reissue Requests：重发选中的请求</li>
<li>Reissue Unconditinally：无条件重发选中的请求</li>
<li>Reissue and eidt：重发并编辑，会打开一个加了断点的请求，可以进行请求和响应数据的修改</li>
<li>Reissue and verify：重发并验证，重新发送请求，并验证其请求结果，会自动加标识（背景颜色）</li>
<li>Reissue Sequentially：重发序列，打开一个数量设置界面，标识需要重发多少次请求</li>
<li>Reissue from Composer：重发并打开composer界面，可以编辑或发送</li>
<li>Revisit in IE：在IE上发起这个请求</li>
</ul>
<h2>问题总结</h2>
<p>在使用Fiddler模拟请求发包时，有时会操作失败，比如通过百度查询数据，GET接口，有时Caching参数不带private参数就响应了302，正常带该参数，是可以响应成功的，如下所示：</p>
<p><img src="https://img2020.cnblogs.com/blog/1242227/202005/1242227-20200530153020372-1661763494.png" alt=""></p>
<p>不知为何会出现，不带该参数的情况。有遇到的博友，望提点一二。</p>
<p>&nbsp;</p>
<p>好了，今天的这三个Fiddler技巧，就分享到这了，个人觉得在实际测试过程中，这三个技巧还是有帮助的。</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
	</div>
	
	<div class="postfoot">
		posted on 
<span id="post-date">2020-05-30 15:35</span>&nbsp;
<a href="https://www.cnblogs.com/hong-fithing/">温一壶清酒</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12992911" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12992911);return false;">收藏</a>
	</div>
</div>


<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 382990, cb_blogApp = 'hong-fithing', cb_blogUserGuid = 'ab04813a-468b-4ddf-dd4b-08d4ef52ecb5';
    var cb_entryId = 12992911, cb_entryCreatedDate = '2020-05-30 15:35', cb_postType = 1; 
    loadViewCount(cb_entryId);
    loadSideColumnAd();
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;"></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


</div>
<div class="footer">
<p id="footer">
	Powered by: 
	<br />
	
	<a href="https://www.cnblogs.com/" id="footer_site_link">博客园</a>
	<br />
	Copyright &copy; 2020 温一壶清酒
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>

</p>


</div>


    <div id="page_end_html">
        <!-- 添加打赏功能按键  -->
<script src="https://static.tctip.com/tctip-1.0.2.min.js"></script>
<script>  
  new tctip({
    top: '40%',
    button: {
      id: 9,
      type: 'dashang',
    },
    list: [
      {
        type: 'alipay',
        qrImg: 'https://files-cdn.cnblogs.com/files/hong-fithing/zhifubao_100_100.bmp'
      }, 
      {
        type: 'wechat',
        qrImg: 'https://files-cdn.cnblogs.com/files/hong-fithing/weixin_100_100.bmp'
      }
    ]
  }).init()
</script>

<!-- 博客页面脚添加Github链接或其他链接 https://github.com/liang1025-->
<!-- 页面左上角 -->
<a href="https://www.jianshu.com/u/518462f09fa6" title="我的简书地址" target="_Blank" class="github-corner" aria-label="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; left: 0; transform: scale(-1, 1);" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>
<!-- 页面右上角 -->
<a href="https://github.com/liang1025?tab=repositories" title="我的github地址" target="_Blank" class="github-corner" aria-label="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#FD6C6C; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>


<!-- 生成博客目录的JS代码，两级目录 -->
<script type="text/javascript">
/*  
    这段代码按H2、H3格式生成两级菜单
    写博客按H2、H3格式写，不然生成不了
    Markdown写作按##、###两级目录写
    当然你也可以改写代码成三级菜单
*/
var BlogDirectory = {
    /* 获取元素位置，距浏览器左边界的距离（left）和距浏览器上边界的距离（top）*/
    getElementPosition:function (ele) {
        var topPosition = 0;
        var leftPosition = 0;
        while (ele){
            topPosition += ele.offsetTop;
            leftPosition += ele.offsetLeft;
            ele = ele.offsetParent;
        }
        return {top:topPosition, left:leftPosition};
    },
    /*获取滚动条当前位置 */
    getScrollBarPosition:function () {
        var scrollBarPosition = document.body.scrollTop || document.documentElement.scrollTop;
        return  scrollBarPosition;
    },
    /* 移动滚动条，finalPos 为目的位置，internal 为移动速度 */
    moveScrollBar:function(finalpos, interval) {
        //若不支持此方法，则退出
        if(!window.scrollTo) {
            return false;
        }
        
        //窗体滚动时，禁用鼠标滚轮
        window.onmousewheel = function(){
            return false;
        };
        
        //清除计时
        if (document.body.movement) {
            clearTimeout(document.body.movement);
        }
        
        //获取滚动条当前位置
        var currentpos =BlogDirectory.getScrollBarPosition();

        var dist = 0;
        //到达预定位置，则解禁鼠标滚轮，并退出
        if (currentpos == finalpos) {
            window.onmousewheel = function(){
                return true;
            }
            return true;
        }
        //未到达，则计算下一步所要移动的距离
        if (currentpos < finalpos) {
            dist = Math.ceil((finalpos - currentpos)/10);
            currentpos += dist;
        }
        if (currentpos > finalpos) {
            dist = Math.ceil((currentpos - finalpos)/10);
            currentpos -= dist;
        }

        var scrTop = BlogDirectory.getScrollBarPosition();//获取滚动条当前位置
        window.scrollTo(0, currentpos);//移动窗口
        if(BlogDirectory.getScrollBarPosition() == scrTop)//若已到底部，则解禁鼠标滚轮，并退出
        {
            window.onmousewheel = function(){
                return true;
            }
            return true;
        }

        //进行下一步移动
        var repeat = "BlogDirectory.moveScrollBar(" + finalpos + "," + interval + ")";
        document.body.movement = setTimeout(repeat, interval);
    },

    htmlDecode:function (text){
        var temp = document.createElement("div");
        temp.innerHTML = text;
        var output = temp.innerText || temp.textContent;
        temp = null;
        return output;
    },
    
    /*
    创建博客目录，id表示包含博文正文的 div 容器的 id，
    mt 和 st 分别表示主标题和次级标题的标签名称（如 H2、H3，大写或小写都可以！），
    interval 表示移动的速度
    */
    createBlogDirectory:function (id, mt, st, newdist, interval){
        //获取博文正文div容器
        var elem = document.getElementById(id);
        if(!elem) return false;
        //获取div中所有元素结点
        var nodes = elem.getElementsByTagName("*");
        //创建博客目录的div容器
        var divSideBar = document.createElement('DIV');
        divSideBar.className = 'uprightsideBar';
        divSideBar.setAttribute('id', 'uprightsideBar');
        var divSideBarTab = document.createElement('DIV');
        divSideBarTab.setAttribute('id', 'sideBarTab');
        divSideBar.appendChild(divSideBarTab);
        var h2 = document.createElement('H2');
        divSideBarTab.appendChild(h2);
        var txt = document.createTextNode('目录导航');
        h2.appendChild(txt);
        var divSideBarContents = document.createElement('DIV');
        divSideBarContents.style.display = 'none';
        divSideBarContents.setAttribute('id', 'sideBarContents');
        divSideBar.appendChild(divSideBarContents);
        //创建自定义列表
        var dlist = document.createElement("dl");
        divSideBarContents.appendChild(dlist);
        var num = 0;//统计找到的mt和st
        mt = mt.toUpperCase();//转化成大写
        st = st.toUpperCase();//转化成大写
		newdist = newdist.toUpperCase();//转化成大写
        //遍历所有元素结点
        for(var i=0; i<nodes.length; i++)
        {
            if(nodes[i].nodeName == mt|| nodes[i].nodeName == st || nodes[i].nodeName == newdist)
            {
                //获取标题文本
                var nodetext = nodes[i].innerHTML.replace(/<\/?[^>]+>/g,"");//innerHTML里面的内容可能有HTML标签，所以用正则表达式去除HTML的标签
                nodetext = nodetext.replace(/ /ig, "");//替换掉所有的
                nodetext = BlogDirectory.htmlDecode(nodetext);
                //插入锚
                nodes[i].setAttribute("id", "blogTitle" + num);
                var item;
                switch(nodes[i].nodeName)
                {
                    case mt:    //若为主标题
                        item = document.createElement("dt");
                        break;
                    case st:    //若为子标题
                        item = document.createElement("dd");
                        break;
					case newdist:    //若为子标题
                        item = document.createElement("ds");
                        break;
                }

                //创建锚链接
                var itemtext = document.createTextNode(nodetext);
                item.appendChild(itemtext);
                item.setAttribute("name", num);
                //添加鼠标点击触发函数
                item.onclick = function(){        
                var pos = BlogDirectory.getElementPosition(document.getElementById("blogTitle" + this.getAttribute("name")));
                    if(!BlogDirectory.moveScrollBar(pos.top, interval)) return false;
                };
                //将自定义表项加入自定义列表中
                dlist.appendChild(item);
                num++;
            }
        }

        if(num == 0) return false;
        /* 鼠标进入时的事件处理 */
        divSideBarTab.onmouseenter = function(){
            divSideBarContents.style.display = 'block';
        }
        /* 鼠标离开时的事件处理 */
        divSideBar.onmouseleave = function() {
            divSideBarContents.style.display = 'none';
        }

        document.body.appendChild(divSideBar);
    }

};

window.onload=function(){
    /* 页面加载完成之后生成博客目录 */
    BlogDirectory.createBlogDirectory("cnblogs_post_body","h2","h3","h4",20);
    
    //为右下角推荐推荐区域添加关注按钮
    $('#div_digg').prepend('<div style="padding-bottom: 5px"><span class="icon_favorite" style="padding-top: 2px"></span><a onclick="follow(\'ab04813a-468b-4ddf-dd4b-08d4ef52ecb5\');" href="javascript:void(0);" style="font-weight: bold; padding-left:5px;">关注下博主哟</a> </div>');
}
</script>
    </div>
</body>
</html>
